name: Release Module

on:
  push:
    paths:
      - 'module.json'
      - 'settings.js'
  workflow_dispatch:  # 添加手動觸發選項

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Debug Information
        run: |
          echo "Repository: ${{ github.repository }}"
          echo "Event: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "SHA: ${{ github.sha }}"
          ls -la
          cat module.json

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Get module version
        id: version
        run: |
          VERSION=$(node -p "require('./module.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Module version: $VERSION"

      - name: Update settings.js version
        run: |
          sed -i "s/export const MODULE_VERSION = \".*\"/export const MODULE_VERSION = \"${{ steps.version.outputs.version }}\"/" settings.js
          cat settings.js | grep MODULE_VERSION

      - name: Create module.zip
        run: |
          zip -r module.zip . -x "*.git*" "*.github*"
          ls -lh module.zip

      - name: Check for existing release
        id: check_release
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const response = await github.rest.repos.getReleaseByTag({
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag: `v${{ steps.version.outputs.version }}`
              });
              console.log(`Release v${{ steps.version.outputs.version }} already exists`);
              return false;
            } catch (error) {
              console.log(`No release found for v${{ steps.version.outputs.version }}, creating new one`);
              return true;
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        if: steps.check_release.outputs.result == 'true'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            module.zip
            module.json
          tag_name: v${{ steps.version.outputs.version }}
          name: v${{ steps.version.outputs.version }}
          body: |
            Release v${{ steps.version.outputs.version }}
            
            Changes:
            - Version updated to ${{ steps.version.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 